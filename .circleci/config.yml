version: 2.1

executors:
  openjdk:
    docker:
      - image: 'cimg/openjdk:17.0'
        environment:
          TZ: Asia/Tokyo

commands:
  test_and_analyze:
    steps:
      - run:
          name: Unit Test & Analyze on SonarCloud
          command: mvn verify sonar:sonar -Dsonar.projectKey=${SONAR_PROJECT_KEY} -DsonarOrganization=${SONAR_ORGANIZATION}
  dockerfile_analyze:
    steps:
      - run:
          name: Dockerfile Lint
          command: docker run --rm -i hadolint/hadolint <./build/Dockerfile
  image_build:
    steps:
      - run:
          name: Image Build
          command: mvn clean package docker:build 
            -DskipTests=True 
            -DgoogleCloudRegion=${GCP_REGION} 
            -DgoogleCloudProjectId=${GCP_PROJECT}
  gcloud_setting:
    steps:
      - run:
          name: Install Gcloud Command & Authorize Google Cloud
          command: |
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            sudo apt-get -y update && sudo apt-get -y install google-cloud-cli
            echo ${GCP_SERVICE_ACCOUNT_KEY} | base64 -d | gcloud auth activate-service-account --key-file=-
  image_push:
    steps:
      - run:
          name: Configure Authentication
          command: gcloud auth configure-docker ${GCP_REGION}-docker.pkg.dev --quiet
      - run:
          name: Image Push
          command: mvn docker:push
            -DgoogleCloudRegion=${GCP_REGION} 
            -DgoogleCloudProjectId=${GCP_PROJECT}
  cloudrun_deploy:
    steps:
      - run:
          name: Set IMAGE_TAG from Maven
          command: |
            IMAGE_TAG=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            echo "export IMAGE_TAG=${IMAGE_TAG}" >> $BASH_ENV
      - run:
          name: Apply Cloud Deploy release
          command: |
            gcloud deploy releases create rel-'$DATE'-'$TIME'
              --project=${GCP_PROJECT}
              --region=${GCP_REGION}
              --delivery-pipeline=sample-springboot-cloudrun-deployment
              --images=sample-springboot-cloudrun-image=${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT}/sample-springboot-cloudrun/helloworld:${IMAGE_TAG}
              --source ./deploy

jobs:
  pre-build-app:
    executor: openjdk
    steps:
      - checkout
      - test_and_analyze
  pre-build-docker:
    executor: openjdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - dockerfile_analyze
  build-and-push:
    executor: openjdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - image_build
      - gcloud_setting
      - image_push
  deploy:
    executor: openjdk
    steps:
      - checkout
      - gcloud_setting
      - cloudrun_deploy

workflows:
  main:
    jobs:
      - pre-build-app: 
          context: 
            - SonarCloud
      - pre-build-docker
      - build-and-push:
          context:
            - GoogleCloud
          requires:
            - pre-build-app
            - pre-build-docker
      - deploy:
          context:
            - GoogleCloud
          requires:
            - build-and-push
